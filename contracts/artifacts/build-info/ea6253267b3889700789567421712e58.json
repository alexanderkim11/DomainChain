{
	"id": "ea6253267b3889700789567421712e58",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"TxPermissions.sol": {
				"content": "// SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity ^0.8.18;\r\n\r\ncontract TransactionPermissions {\r\n    /// Allowed transaction types mask\r\n    uint32 constant None = 0;\r\n    uint32 constant All = 0xffffffff;\r\n    uint32 constant Basic = 0x01;\r\n    uint32 constant Call = 0x02;\r\n    uint32 constant Create = 0x04;\r\n    uint32 constant Private = 0x08;\r\n    mapping(address => uint32) approvedAddresses;\r\n    address deployer;\r\n\r\n    constructor() {\r\n        deployer = msg.sender;\r\n    }\r\n\r\n    function allowedTxTypes(address sender) public view returns (uint32)\r\n    {\r\n        return approvedAddresses[sender];\r\n    }\r\n\r\n    function setPermissions(address approved, bool all, bool basic, bool call, bool create, bool priv) public {\r\n        require(msg.sender == deployer, \"Only the admin can call this function\");\r\n        if (all == true){\r\n            approve(approved, All);\r\n        }else{\r\n            uint32 ret = None;\r\n            if (basic == true){\r\n                ret = ret | Basic;\r\n            }\r\n            if (call == true){\r\n                ret = ret | Call;\r\n            }\r\n            if (create == true){\r\n                ret = ret | Create;\r\n            }\r\n            if (priv == true){\r\n                ret = ret | Private;\r\n            }\r\n            approve(approved, ret);\r\n        }\r\n    }\r\n\r\n    function approve(address approved, uint32 permissions) internal {\r\n        approvedAddresses[approved] = permissions;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"TxPermissions.sol": {
				"TransactionPermissions": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "allowedTxTypes",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "all",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "basic",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "call",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "create",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "priv",
									"type": "bool"
								}
							],
							"name": "setPermissions",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TxPermissions.sol\":70:1461  contract TransactionPermissions {... */\n  mstore(0x40, 0x80)\n    /* \"TxPermissions.sol\":437:491  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"TxPermissions.sol\":473:483  msg.sender */\n  caller\n    /* \"TxPermissions.sol\":462:470  deployer */\n  0x01\n  0x00\n    /* \"TxPermissions.sol\":462:483  deployer = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"TxPermissions.sol\":70:1461  contract TransactionPermissions {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TxPermissions.sol\":70:1461  contract TransactionPermissions {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xe1751221\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf1416030\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TxPermissions.sol\":499:624  function allowedTxTypes(address sender) public view returns (uint32)... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TxPermissions.sol\":632:1326  function setPermissions(address approved, bool all, bool basic, bool call, bool create, bool priv) public {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"TxPermissions.sol\":499:624  function allowedTxTypes(address sender) public view returns (uint32)... */\n    tag_8:\n        /* \"TxPermissions.sol\":560:566  uint32 */\n      0x00\n        /* \"TxPermissions.sol\":591:608  approvedAddresses */\n      dup1\n        /* \"TxPermissions.sol\":591:616  approvedAddresses[sender] */\n      0x00\n        /* \"TxPermissions.sol\":609:615  sender */\n      dup4\n        /* \"TxPermissions.sol\":591:616  approvedAddresses[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"TxPermissions.sol\":584:616  return approvedAddresses[sender] */\n      swap1\n      pop\n        /* \"TxPermissions.sol\":499:624  function allowedTxTypes(address sender) public view returns (uint32)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TxPermissions.sol\":632:1326  function setPermissions(address approved, bool all, bool basic, bool call, bool create, bool priv) public {... */\n    tag_14:\n        /* \"TxPermissions.sol\":771:779  deployer */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TxPermissions.sol\":757:779  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TxPermissions.sol\":757:767  msg.sender */\n      caller\n        /* \"TxPermissions.sol\":757:779  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"TxPermissions.sol\":749:821  require(msg.sender == deployer, \"Only the admin can call this function\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"TxPermissions.sol\":843:847  true */\n      0x01\n        /* \"TxPermissions.sol\":836:847  all == true */\n      iszero\n      iszero\n        /* \"TxPermissions.sol\":836:839  all */\n      dup6\n        /* \"TxPermissions.sol\":836:847  all == true */\n      iszero\n      iszero\n      sub\n        /* \"TxPermissions.sol\":832:1319  if (all == true){... */\n      tag_20\n      jumpi\n        /* \"TxPermissions.sol\":863:885  approve(approved, All) */\n      tag_21\n        /* \"TxPermissions.sol\":871:879  approved */\n      dup7\n        /* \"TxPermissions.sol\":202:212  0xffffffff */\n      0xffffffff\n        /* \"TxPermissions.sol\":863:870  approve */\n      tag_22\n        /* \"TxPermissions.sol\":863:885  approve(approved, All) */\n      jump\t// in\n    tag_21:\n        /* \"TxPermissions.sol\":832:1319  if (all == true){... */\n      jump(tag_23)\n    tag_20:\n        /* \"TxPermissions.sol\":916:926  uint32 ret */\n      0x00\n        /* \"TxPermissions.sol\":961:965  true */\n      0x01\n        /* \"TxPermissions.sol\":952:965  basic == true */\n      iszero\n      iszero\n        /* \"TxPermissions.sol\":952:957  basic */\n      dup6\n        /* \"TxPermissions.sol\":952:965  basic == true */\n      iszero\n      iszero\n      sub\n        /* \"TxPermissions.sol\":948:1018  if (basic == true){... */\n      tag_24\n      jumpi\n        /* \"TxPermissions.sol\":243:247  0x01 */\n      0x01\n        /* \"TxPermissions.sol\":991:994  ret */\n      dup2\n        /* \"TxPermissions.sol\":991:1002  ret | Basic */\n      or\n        /* \"TxPermissions.sol\":985:1002  ret = ret | Basic */\n      swap1\n      pop\n        /* \"TxPermissions.sol\":948:1018  if (basic == true){... */\n    tag_24:\n        /* \"TxPermissions.sol\":1044:1048  true */\n      0x01\n        /* \"TxPermissions.sol\":1036:1048  call == true */\n      iszero\n      iszero\n        /* \"TxPermissions.sol\":1036:1040  call */\n      dup5\n        /* \"TxPermissions.sol\":1036:1048  call == true */\n      iszero\n      iszero\n      sub\n        /* \"TxPermissions.sol\":1032:1100  if (call == true){... */\n      tag_25\n      jumpi\n        /* \"TxPermissions.sol\":277:281  0x02 */\n      0x02\n        /* \"TxPermissions.sol\":1074:1077  ret */\n      dup2\n        /* \"TxPermissions.sol\":1074:1084  ret | Call */\n      or\n        /* \"TxPermissions.sol\":1068:1084  ret = ret | Call */\n      swap1\n      pop\n        /* \"TxPermissions.sol\":1032:1100  if (call == true){... */\n    tag_25:\n        /* \"TxPermissions.sol\":1128:1132  true */\n      0x01\n        /* \"TxPermissions.sol\":1118:1132  create == true */\n      iszero\n      iszero\n        /* \"TxPermissions.sol\":1118:1124  create */\n      dup4\n        /* \"TxPermissions.sol\":1118:1132  create == true */\n      iszero\n      iszero\n      sub\n        /* \"TxPermissions.sol\":1114:1186  if (create == true){... */\n      tag_26\n      jumpi\n        /* \"TxPermissions.sol\":313:317  0x04 */\n      0x04\n        /* \"TxPermissions.sol\":1158:1161  ret */\n      dup2\n        /* \"TxPermissions.sol\":1158:1170  ret | Create */\n      or\n        /* \"TxPermissions.sol\":1152:1170  ret = ret | Create */\n      swap1\n      pop\n        /* \"TxPermissions.sol\":1114:1186  if (create == true){... */\n    tag_26:\n        /* \"TxPermissions.sol\":1212:1216  true */\n      0x01\n        /* \"TxPermissions.sol\":1204:1216  priv == true */\n      iszero\n      iszero\n        /* \"TxPermissions.sol\":1204:1208  priv */\n      dup3\n        /* \"TxPermissions.sol\":1204:1216  priv == true */\n      iszero\n      iszero\n      sub\n        /* \"TxPermissions.sol\":1200:1271  if (priv == true){... */\n      tag_27\n      jumpi\n        /* \"TxPermissions.sol\":350:354  0x08 */\n      0x08\n        /* \"TxPermissions.sol\":1242:1245  ret */\n      dup2\n        /* \"TxPermissions.sol\":1242:1255  ret | Private */\n      or\n        /* \"TxPermissions.sol\":1236:1255  ret = ret | Private */\n      swap1\n      pop\n        /* \"TxPermissions.sol\":1200:1271  if (priv == true){... */\n    tag_27:\n        /* \"TxPermissions.sol\":1285:1307  approve(approved, ret) */\n      tag_28\n        /* \"TxPermissions.sol\":1293:1301  approved */\n      dup8\n        /* \"TxPermissions.sol\":1303:1306  ret */\n      dup3\n        /* \"TxPermissions.sol\":1285:1292  approve */\n      tag_22\n        /* \"TxPermissions.sol\":1285:1307  approve(approved, ret) */\n      jump\t// in\n    tag_28:\n        /* \"TxPermissions.sol\":901:1319  {... */\n      pop\n        /* \"TxPermissions.sol\":832:1319  if (all == true){... */\n    tag_23:\n        /* \"TxPermissions.sol\":632:1326  function setPermissions(address approved, bool all, bool basic, bool call, bool create, bool priv) public {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TxPermissions.sol\":1334:1458  function approve(address approved, uint32 permissions) internal {... */\n    tag_22:\n        /* \"TxPermissions.sol\":1439:1450  permissions */\n      dup1\n        /* \"TxPermissions.sol\":1409:1426  approvedAddresses */\n      0x00\n        /* \"TxPermissions.sol\":1409:1436  approvedAddresses[approved] */\n      dup1\n        /* \"TxPermissions.sol\":1427:1435  approved */\n      dup5\n        /* \"TxPermissions.sol\":1409:1436  approvedAddresses[approved] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"TxPermissions.sol\":1409:1450  approvedAddresses[approved] = permissions */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TxPermissions.sol\":1334:1458  function approve(address approved, uint32 permissions) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_31:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_33:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_34:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_51\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_33\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_35:\n        /* \"#utility.yul\":641:665   */\n      tag_53\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_34\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_54:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_36:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_56\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_35\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_7:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_59\n      tag_31\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":917:1036   */\n    tag_58:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_60\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_36\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1269   */\n    tag_37:\n        /* \"#utility.yul\":1212:1219   */\n      0x00\n        /* \"#utility.yul\":1252:1262   */\n      0xffffffff\n        /* \"#utility.yul\":1245:1250   */\n      dup3\n        /* \"#utility.yul\":1241:1263   */\n      and\n        /* \"#utility.yul\":1230:1263   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1390   */\n    tag_38:\n        /* \"#utility.yul\":1360:1383   */\n      tag_63\n        /* \"#utility.yul\":1377:1382   */\n      dup2\n        /* \"#utility.yul\":1360:1383   */\n      tag_37\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1355:1358   */\n      dup3\n        /* \"#utility.yul\":1348:1384   */\n      mstore\n        /* \"#utility.yul\":1275:1390   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1614   */\n    tag_10:\n        /* \"#utility.yul\":1487:1491   */\n      0x00\n        /* \"#utility.yul\":1525:1527   */\n      0x20\n        /* \"#utility.yul\":1514:1523   */\n      dup3\n        /* \"#utility.yul\":1510:1528   */\n      add\n        /* \"#utility.yul\":1502:1528   */\n      swap1\n      pop\n        /* \"#utility.yul\":1538:1607   */\n      tag_65\n        /* \"#utility.yul\":1604:1605   */\n      0x00\n        /* \"#utility.yul\":1593:1602   */\n      dup4\n        /* \"#utility.yul\":1589:1606   */\n      add\n        /* \"#utility.yul\":1580:1586   */\n      dup5\n        /* \"#utility.yul\":1538:1607   */\n      tag_38\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1396:1614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1620:1710   */\n    tag_39:\n        /* \"#utility.yul\":1654:1661   */\n      0x00\n        /* \"#utility.yul\":1697:1702   */\n      dup2\n        /* \"#utility.yul\":1690:1703   */\n      iszero\n        /* \"#utility.yul\":1683:1704   */\n      iszero\n        /* \"#utility.yul\":1672:1704   */\n      swap1\n      pop\n        /* \"#utility.yul\":1620:1710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1716:1832   */\n    tag_40:\n        /* \"#utility.yul\":1786:1807   */\n      tag_68\n        /* \"#utility.yul\":1801:1806   */\n      dup2\n        /* \"#utility.yul\":1786:1807   */\n      tag_39\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1779:1784   */\n      dup2\n        /* \"#utility.yul\":1776:1808   */\n      eq\n        /* \"#utility.yul\":1766:1826   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":1822:1823   */\n      0x00\n        /* \"#utility.yul\":1819:1820   */\n      dup1\n        /* \"#utility.yul\":1812:1824   */\n      revert\n        /* \"#utility.yul\":1766:1826   */\n    tag_69:\n        /* \"#utility.yul\":1716:1832   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1838:1971   */\n    tag_41:\n        /* \"#utility.yul\":1881:1886   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup2\n        /* \"#utility.yul\":1906:1926   */\n      calldataload\n        /* \"#utility.yul\":1897:1926   */\n      swap1\n      pop\n        /* \"#utility.yul\":1935:1965   */\n      tag_71\n        /* \"#utility.yul\":1959:1964   */\n      dup2\n        /* \"#utility.yul\":1935:1965   */\n      tag_40\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1838:1971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1977:3004   */\n    tag_13:\n        /* \"#utility.yul\":2066:2072   */\n      0x00\n        /* \"#utility.yul\":2074:2080   */\n      dup1\n        /* \"#utility.yul\":2082:2088   */\n      0x00\n        /* \"#utility.yul\":2090:2096   */\n      dup1\n        /* \"#utility.yul\":2098:2104   */\n      0x00\n        /* \"#utility.yul\":2106:2112   */\n      dup1\n        /* \"#utility.yul\":2155:2158   */\n      0xc0\n        /* \"#utility.yul\":2143:2152   */\n      dup8\n        /* \"#utility.yul\":2134:2141   */\n      dup10\n        /* \"#utility.yul\":2130:2153   */\n      sub\n        /* \"#utility.yul\":2126:2159   */\n      slt\n        /* \"#utility.yul\":2123:2243   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":2162:2241   */\n      tag_74\n      tag_31\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2123:2243   */\n    tag_73:\n        /* \"#utility.yul\":2282:2283   */\n      0x00\n        /* \"#utility.yul\":2307:2360   */\n      tag_75\n        /* \"#utility.yul\":2352:2359   */\n      dup10\n        /* \"#utility.yul\":2343:2349   */\n      dup3\n        /* \"#utility.yul\":2332:2341   */\n      dup11\n        /* \"#utility.yul\":2328:2350   */\n      add\n        /* \"#utility.yul\":2307:2360   */\n      tag_36\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2297:2360   */\n      swap7\n      pop\n        /* \"#utility.yul\":2253:2370   */\n      pop\n        /* \"#utility.yul\":2409:2411   */\n      0x20\n        /* \"#utility.yul\":2435:2485   */\n      tag_76\n        /* \"#utility.yul\":2477:2484   */\n      dup10\n        /* \"#utility.yul\":2468:2474   */\n      dup3\n        /* \"#utility.yul\":2457:2466   */\n      dup11\n        /* \"#utility.yul\":2453:2475   */\n      add\n        /* \"#utility.yul\":2435:2485   */\n      tag_41\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2425:2485   */\n      swap6\n      pop\n        /* \"#utility.yul\":2380:2495   */\n      pop\n        /* \"#utility.yul\":2534:2536   */\n      0x40\n        /* \"#utility.yul\":2560:2610   */\n      tag_77\n        /* \"#utility.yul\":2602:2609   */\n      dup10\n        /* \"#utility.yul\":2593:2599   */\n      dup3\n        /* \"#utility.yul\":2582:2591   */\n      dup11\n        /* \"#utility.yul\":2578:2600   */\n      add\n        /* \"#utility.yul\":2560:2610   */\n      tag_41\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2550:2610   */\n      swap5\n      pop\n        /* \"#utility.yul\":2505:2620   */\n      pop\n        /* \"#utility.yul\":2659:2661   */\n      0x60\n        /* \"#utility.yul\":2685:2735   */\n      tag_78\n        /* \"#utility.yul\":2727:2734   */\n      dup10\n        /* \"#utility.yul\":2718:2724   */\n      dup3\n        /* \"#utility.yul\":2707:2716   */\n      dup11\n        /* \"#utility.yul\":2703:2725   */\n      add\n        /* \"#utility.yul\":2685:2735   */\n      tag_41\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2675:2735   */\n      swap4\n      pop\n        /* \"#utility.yul\":2630:2745   */\n      pop\n        /* \"#utility.yul\":2784:2787   */\n      0x80\n        /* \"#utility.yul\":2811:2861   */\n      tag_79\n        /* \"#utility.yul\":2853:2860   */\n      dup10\n        /* \"#utility.yul\":2844:2850   */\n      dup3\n        /* \"#utility.yul\":2833:2842   */\n      dup11\n        /* \"#utility.yul\":2829:2851   */\n      add\n        /* \"#utility.yul\":2811:2861   */\n      tag_41\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2801:2861   */\n      swap3\n      pop\n        /* \"#utility.yul\":2755:2871   */\n      pop\n        /* \"#utility.yul\":2910:2913   */\n      0xa0\n        /* \"#utility.yul\":2937:2987   */\n      tag_80\n        /* \"#utility.yul\":2979:2986   */\n      dup10\n        /* \"#utility.yul\":2970:2976   */\n      dup3\n        /* \"#utility.yul\":2959:2968   */\n      dup11\n        /* \"#utility.yul\":2955:2977   */\n      add\n        /* \"#utility.yul\":2937:2987   */\n      tag_41\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2927:2987   */\n      swap2\n      pop\n        /* \"#utility.yul\":2881:2997   */\n      pop\n        /* \"#utility.yul\":1977:3004   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":3010:3179   */\n    tag_42:\n        /* \"#utility.yul\":3094:3105   */\n      0x00\n        /* \"#utility.yul\":3128:3134   */\n      dup3\n        /* \"#utility.yul\":3123:3126   */\n      dup3\n        /* \"#utility.yul\":3116:3135   */\n      mstore\n        /* \"#utility.yul\":3168:3172   */\n      0x20\n        /* \"#utility.yul\":3163:3166   */\n      dup3\n        /* \"#utility.yul\":3159:3173   */\n      add\n        /* \"#utility.yul\":3144:3173   */\n      swap1\n      pop\n        /* \"#utility.yul\":3010:3179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3185:3409   */\n    tag_43:\n        /* \"#utility.yul\":3325:3359   */\n      0x4f6e6c79207468652061646d696e2063616e2063616c6c20746869732066756e\n        /* \"#utility.yul\":3321:3322   */\n      0x00\n        /* \"#utility.yul\":3313:3319   */\n      dup3\n        /* \"#utility.yul\":3309:3323   */\n      add\n        /* \"#utility.yul\":3302:3360   */\n      mstore\n        /* \"#utility.yul\":3394:3401   */\n      0x6374696f6e000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3389:3391   */\n      0x20\n        /* \"#utility.yul\":3381:3387   */\n      dup3\n        /* \"#utility.yul\":3377:3392   */\n      add\n        /* \"#utility.yul\":3370:3402   */\n      mstore\n        /* \"#utility.yul\":3185:3409   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3415:3781   */\n    tag_44:\n        /* \"#utility.yul\":3557:3560   */\n      0x00\n        /* \"#utility.yul\":3578:3645   */\n      tag_84\n        /* \"#utility.yul\":3642:3644   */\n      0x25\n        /* \"#utility.yul\":3637:3640   */\n      dup4\n        /* \"#utility.yul\":3578:3645   */\n      tag_42\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3571:3645   */\n      swap2\n      pop\n        /* \"#utility.yul\":3654:3747   */\n      tag_85\n        /* \"#utility.yul\":3743:3746   */\n      dup3\n        /* \"#utility.yul\":3654:3747   */\n      tag_43\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":3772:3774   */\n      0x40\n        /* \"#utility.yul\":3767:3770   */\n      dup3\n        /* \"#utility.yul\":3763:3775   */\n      add\n        /* \"#utility.yul\":3756:3775   */\n      swap1\n      pop\n        /* \"#utility.yul\":3415:3781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3787:4206   */\n    tag_19:\n        /* \"#utility.yul\":3953:3957   */\n      0x00\n        /* \"#utility.yul\":3991:3993   */\n      0x20\n        /* \"#utility.yul\":3980:3989   */\n      dup3\n        /* \"#utility.yul\":3976:3994   */\n      add\n        /* \"#utility.yul\":3968:3994   */\n      swap1\n      pop\n        /* \"#utility.yul\":4040:4049   */\n      dup2\n        /* \"#utility.yul\":4034:4038   */\n      dup2\n        /* \"#utility.yul\":4030:4050   */\n      sub\n        /* \"#utility.yul\":4026:4027   */\n      0x00\n        /* \"#utility.yul\":4015:4024   */\n      dup4\n        /* \"#utility.yul\":4011:4028   */\n      add\n        /* \"#utility.yul\":4004:4051   */\n      mstore\n        /* \"#utility.yul\":4068:4199   */\n      tag_87\n        /* \"#utility.yul\":4194:4198   */\n      dup2\n        /* \"#utility.yul\":4068:4199   */\n      tag_44\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":4060:4199   */\n      swap1\n      pop\n        /* \"#utility.yul\":3787:4206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220044f2f51ceafa3c94e6d0db8be8bb09fc85fced0e232a41f3ad81f0d672ba71064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_35": {
									"entryPoint": null,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104b9806100616000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063e17512211461003b578063f14160301461006b575b600080fd5b610055600480360381019061005091906102b4565b610087565b6040516100629190610300565b60405180910390f35b61008560048036038101906100809190610353565b6100df565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016690610463565b60405180910390fd5b600115158515150361018e576101898663ffffffff6101f0565b6101e8565b600060011515851515036101a3576001811790505b60011515841515036101b6576002811790505b60011515831515036101c9576004811790505b60011515821515036101dc576008811790505b6101e687826101f0565b505b505050505050565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028182610256565b9050919050565b61029181610276565b811461029c57600080fd5b50565b6000813590506102ae81610288565b92915050565b6000602082840312156102ca576102c9610251565b5b60006102d88482850161029f565b91505092915050565b600063ffffffff82169050919050565b6102fa816102e1565b82525050565b600060208201905061031560008301846102f1565b92915050565b60008115159050919050565b6103308161031b565b811461033b57600080fd5b50565b60008135905061034d81610327565b92915050565b60008060008060008060c087890312156103705761036f610251565b5b600061037e89828a0161029f565b965050602061038f89828a0161033e565b95505060406103a089828a0161033e565b94505060606103b189828a0161033e565b93505060806103c289828a0161033e565b92505060a06103d389828a0161033e565b9150509295509295509295565b600082825260208201905092915050565b7f4f6e6c79207468652061646d696e2063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b600061044d6025836103e0565b9150610458826103f1565b604082019050919050565b6000602082019050818103600083015261047c81610440565b905091905056fea2646970667358221220044f2f51ceafa3c94e6d0db8be8bb09fc85fced0e232a41f3ad81f0d672ba71064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x4B9 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE1751221 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF1416030 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x353 JUMP JUMPDEST PUSH2 0xDF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166 SWAP1 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO DUP6 ISZERO ISZERO SUB PUSH2 0x18E JUMPI PUSH2 0x189 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1F0 JUMP JUMPDEST PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO DUP6 ISZERO ISZERO SUB PUSH2 0x1A3 JUMPI PUSH1 0x1 DUP2 OR SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO ISZERO DUP5 ISZERO ISZERO SUB PUSH2 0x1B6 JUMPI PUSH1 0x2 DUP2 OR SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO ISZERO DUP4 ISZERO ISZERO SUB PUSH2 0x1C9 JUMPI PUSH1 0x4 DUP2 OR SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO ISZERO DUP3 ISZERO ISZERO SUB PUSH2 0x1DC JUMPI PUSH1 0x8 DUP2 OR SWAP1 POP JUMPDEST PUSH2 0x1E6 DUP8 DUP3 PUSH2 0x1F0 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281 DUP3 PUSH2 0x256 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x291 DUP2 PUSH2 0x276 JUMP JUMPDEST DUP2 EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AE DUP2 PUSH2 0x288 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CA JUMPI PUSH2 0x2C9 PUSH2 0x251 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D8 DUP5 DUP3 DUP6 ADD PUSH2 0x29F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FA DUP2 PUSH2 0x2E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x315 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x330 DUP2 PUSH2 0x31B JUMP JUMPDEST DUP2 EQ PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34D DUP2 PUSH2 0x327 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x370 JUMPI PUSH2 0x36F PUSH2 0x251 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP10 DUP3 DUP11 ADD PUSH2 0x29F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x38F DUP10 DUP3 DUP11 ADD PUSH2 0x33E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x3A0 DUP10 DUP3 DUP11 ADD PUSH2 0x33E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x3B1 DUP10 DUP3 DUP11 ADD PUSH2 0x33E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3C2 DUP10 DUP3 DUP11 ADD PUSH2 0x33E JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x3D3 DUP10 DUP3 DUP11 ADD PUSH2 0x33E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79207468652061646D696E2063616E2063616C6C20746869732066756E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44D PUSH1 0x25 DUP4 PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x458 DUP3 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47C DUP2 PUSH2 0x440 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0x4F 0x2F MLOAD 0xCE 0xAF LOG3 0xC9 0x4E PUSH14 0xDB8BE8BB09FC85FCED0E232A41F GASPRICE 0xD8 0x1F 0xD PUSH8 0x2BA71064736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "70:1391:0:-:0;;;437:54;;;;;;;;;;473:10;462:8;;:21;;;;;;;;;;;;;;;;;;70:1391;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@allowedTxTypes_47": {
									"entryPoint": 135,
									"id": 47,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_149": {
									"entryPoint": 496,
									"id": 149,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setPermissions_135": {
									"entryPoint": 223,
									"id": 135,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_boolt_boolt_boolt_boolt_bool": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_t_stringliteral_342ed9a807fdc65558f2dc6b58f404db0a504f1c21a28c173767c765282f3da1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_342ed9a807fdc65558f2dc6b58f404db0a504f1c21a28c173767c765282f3da1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_342ed9a807fdc65558f2dc6b58f404db0a504f1c21a28c173767c765282f3da1": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4209:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1220:49:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1230:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1245:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1252:10:1",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1241:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1241:22:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1230:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1202:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1212:7:1",
														"type": ""
													}
												],
												"src": "1176:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1338:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1377:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "1360:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1360:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1348:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1348:36:1"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1326:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1333:3:1",
														"type": ""
													}
												],
												"src": "1275:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1492:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1502:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1514:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1525:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1510:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1510:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1502:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1580:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1593:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1604:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1589:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1589:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1538:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1538:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1538:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1464:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1476:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1487:4:1",
														"type": ""
													}
												],
												"src": "1396:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1662:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1672:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1697:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1690:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1690:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1683:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1683:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1672:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1644:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1654:7:1",
														"type": ""
													}
												],
												"src": "1620:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1756:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1810:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1819:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1822:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1812:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1812:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1812:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1779:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1801:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "1786:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1786:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1776:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1776:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1769:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1769:40:1"
															},
															"nodeType": "YulIf",
															"src": "1766:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1749:5:1",
														"type": ""
													}
												],
												"src": "1716:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1887:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1897:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1919:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1906:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1906:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1897:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1959:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1935:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1935:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1865:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1873:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1881:5:1",
														"type": ""
													}
												],
												"src": "1838:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2113:891:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2160:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2162:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2162:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2162:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2134:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2143:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2130:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2130:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2155:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2126:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2126:33:1"
															},
															"nodeType": "YulIf",
															"src": "2123:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2253:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2268:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2282:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2272:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2297:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2332:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2343:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2328:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2328:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2352:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2307:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2297:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2380:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2395:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2409:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2399:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2425:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2457:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2468:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2453:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2453:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2477:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2435:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2435:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2425:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2505:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2520:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2534:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2524:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2550:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2582:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2593:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2578:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2578:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2602:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2560:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2560:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2550:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2630:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2645:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2659:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2649:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2675:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2707:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2718:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2703:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2703:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2727:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2685:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2675:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2755:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2770:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2784:3:1",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2774:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2801:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2833:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2844:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2829:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2829:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2853:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2811:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2811:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "2801:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2881:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2896:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2910:3:1",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2900:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2927:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2959:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2970:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2955:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2955:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2979:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2937:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2937:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "2927:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_boolt_boolt_boolt_boolt_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2043:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2054:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2066:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2074:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2082:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2090:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2098:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2106:6:1",
														"type": ""
													}
												],
												"src": "1977:1027:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3106:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3123:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3128:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3116:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3144:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3163:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3168:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3159:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3159:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3144:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3078:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3083:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3094:11:1",
														"type": ""
													}
												],
												"src": "3010:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3291:118:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3313:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3321:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3309:14:1"
																	},
																	{
																		"hexValue": "4f6e6c79207468652061646d696e2063616e2063616c6c20746869732066756e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3325:34:1",
																		"type": "",
																		"value": "Only the admin can call this fun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3302:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3302:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3302:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3381:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3389:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3377:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3377:15:1"
																	},
																	{
																		"hexValue": "6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3394:7:1",
																		"type": "",
																		"value": "ction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3370:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3370:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3370:32:1"
														}
													]
												},
												"name": "store_literal_in_memory_342ed9a807fdc65558f2dc6b58f404db0a504f1c21a28c173767c765282f3da1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3283:6:1",
														"type": ""
													}
												],
												"src": "3185:224:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3561:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3571:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3637:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3578:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3578:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3571:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3743:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_342ed9a807fdc65558f2dc6b58f404db0a504f1c21a28c173767c765282f3da1",
																	"nodeType": "YulIdentifier",
																	"src": "3654:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3654:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3654:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3756:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3772:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3763:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3756:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_342ed9a807fdc65558f2dc6b58f404db0a504f1c21a28c173767c765282f3da1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3549:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3557:3:1",
														"type": ""
													}
												],
												"src": "3415:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3958:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3968:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3980:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3991:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3976:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3968:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4015:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4026:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4011:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4011:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4034:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4040:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4030:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4030:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4004:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4004:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4060:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4194:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_342ed9a807fdc65558f2dc6b58f404db0a504f1c21a28c173767c765282f3da1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4068:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4068:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4060:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_342ed9a807fdc65558f2dc6b58f404db0a504f1c21a28c173767c765282f3da1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3938:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3953:4:1",
														"type": ""
													}
												],
												"src": "3787:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_boolt_boolt_boolt_boolt_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_342ed9a807fdc65558f2dc6b58f404db0a504f1c21a28c173767c765282f3da1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the admin can call this fun\")\n\n        mstore(add(memPtr, 32), \"ction\")\n\n    }\n\n    function abi_encode_t_stringliteral_342ed9a807fdc65558f2dc6b58f404db0a504f1c21a28c173767c765282f3da1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_342ed9a807fdc65558f2dc6b58f404db0a504f1c21a28c173767c765282f3da1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_342ed9a807fdc65558f2dc6b58f404db0a504f1c21a28c173767c765282f3da1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_342ed9a807fdc65558f2dc6b58f404db0a504f1c21a28c173767c765282f3da1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063e17512211461003b578063f14160301461006b575b600080fd5b610055600480360381019061005091906102b4565b610087565b6040516100629190610300565b60405180910390f35b61008560048036038101906100809190610353565b6100df565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016690610463565b60405180910390fd5b600115158515150361018e576101898663ffffffff6101f0565b6101e8565b600060011515851515036101a3576001811790505b60011515841515036101b6576002811790505b60011515831515036101c9576004811790505b60011515821515036101dc576008811790505b6101e687826101f0565b505b505050505050565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028182610256565b9050919050565b61029181610276565b811461029c57600080fd5b50565b6000813590506102ae81610288565b92915050565b6000602082840312156102ca576102c9610251565b5b60006102d88482850161029f565b91505092915050565b600063ffffffff82169050919050565b6102fa816102e1565b82525050565b600060208201905061031560008301846102f1565b92915050565b60008115159050919050565b6103308161031b565b811461033b57600080fd5b50565b60008135905061034d81610327565b92915050565b60008060008060008060c087890312156103705761036f610251565b5b600061037e89828a0161029f565b965050602061038f89828a0161033e565b95505060406103a089828a0161033e565b94505060606103b189828a0161033e565b93505060806103c289828a0161033e565b92505060a06103d389828a0161033e565b9150509295509295509295565b600082825260208201905092915050565b7f4f6e6c79207468652061646d696e2063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b600061044d6025836103e0565b9150610458826103f1565b604082019050919050565b6000602082019050818103600083015261047c81610440565b905091905056fea2646970667358221220044f2f51ceafa3c94e6d0db8be8bb09fc85fced0e232a41f3ad81f0d672ba71064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE1751221 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF1416030 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x353 JUMP JUMPDEST PUSH2 0xDF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166 SWAP1 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO DUP6 ISZERO ISZERO SUB PUSH2 0x18E JUMPI PUSH2 0x189 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1F0 JUMP JUMPDEST PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO DUP6 ISZERO ISZERO SUB PUSH2 0x1A3 JUMPI PUSH1 0x1 DUP2 OR SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO ISZERO DUP5 ISZERO ISZERO SUB PUSH2 0x1B6 JUMPI PUSH1 0x2 DUP2 OR SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO ISZERO DUP4 ISZERO ISZERO SUB PUSH2 0x1C9 JUMPI PUSH1 0x4 DUP2 OR SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO ISZERO DUP3 ISZERO ISZERO SUB PUSH2 0x1DC JUMPI PUSH1 0x8 DUP2 OR SWAP1 POP JUMPDEST PUSH2 0x1E6 DUP8 DUP3 PUSH2 0x1F0 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281 DUP3 PUSH2 0x256 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x291 DUP2 PUSH2 0x276 JUMP JUMPDEST DUP2 EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AE DUP2 PUSH2 0x288 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CA JUMPI PUSH2 0x2C9 PUSH2 0x251 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D8 DUP5 DUP3 DUP6 ADD PUSH2 0x29F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FA DUP2 PUSH2 0x2E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x315 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x330 DUP2 PUSH2 0x31B JUMP JUMPDEST DUP2 EQ PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34D DUP2 PUSH2 0x327 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x370 JUMPI PUSH2 0x36F PUSH2 0x251 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP10 DUP3 DUP11 ADD PUSH2 0x29F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x38F DUP10 DUP3 DUP11 ADD PUSH2 0x33E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x3A0 DUP10 DUP3 DUP11 ADD PUSH2 0x33E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x3B1 DUP10 DUP3 DUP11 ADD PUSH2 0x33E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3C2 DUP10 DUP3 DUP11 ADD PUSH2 0x33E JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x3D3 DUP10 DUP3 DUP11 ADD PUSH2 0x33E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79207468652061646D696E2063616E2063616C6C20746869732066756E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44D PUSH1 0x25 DUP4 PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x458 DUP3 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47C DUP2 PUSH2 0x440 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0x4F 0x2F MLOAD 0xCE 0xAF LOG3 0xC9 0x4E PUSH14 0xDB8BE8BB09FC85FCED0E232A41F GASPRICE 0xD8 0x1F 0xD PUSH8 0x2BA71064736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "70:1391:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;499:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;632:694;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;499:125;560:6;591:17;:25;609:6;591:25;;;;;;;;;;;;;;;;;;;;;;;;;584:32;;499:125;;;:::o;632:694::-;771:8;;;;;;;;;;;757:22;;:10;:22;;;749:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;843:4;836:11;;:3;:11;;;832:487;;863:22;871:8;202:10;863:7;:22::i;:::-;832:487;;;916:10;961:4;952:13;;:5;:13;;;948:70;;243:4;991:3;:11;985:17;;948:70;1044:4;1036:12;;:4;:12;;;1032:68;;277:4;1074:3;:10;1068:16;;1032:68;1128:4;1118:14;;:6;:14;;;1114:72;;313:4;1158:3;:12;1152:18;;1114:72;1212:4;1204:12;;:4;:12;;;1200:71;;350:4;1242:3;:13;1236:19;;1200:71;1285:22;1293:8;1303:3;1285:7;:22::i;:::-;901:418;832:487;632:694;;;;;;:::o;1334:124::-;1439:11;1409:17;:27;1427:8;1409:27;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;1334:124;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:93::-;1212:7;1252:10;1245:5;1241:22;1230:33;;1176:93;;;:::o;1275:115::-;1360:23;1377:5;1360:23;:::i;:::-;1355:3;1348:36;1275:115;;:::o;1396:218::-;1487:4;1525:2;1514:9;1510:18;1502:26;;1538:69;1604:1;1593:9;1589:17;1580:6;1538:69;:::i;:::-;1396:218;;;;:::o;1620:90::-;1654:7;1697:5;1690:13;1683:21;1672:32;;1620:90;;;:::o;1716:116::-;1786:21;1801:5;1786:21;:::i;:::-;1779:5;1776:32;1766:60;;1822:1;1819;1812:12;1766:60;1716:116;:::o;1838:133::-;1881:5;1919:6;1906:20;1897:29;;1935:30;1959:5;1935:30;:::i;:::-;1838:133;;;;:::o;1977:1027::-;2066:6;2074;2082;2090;2098;2106;2155:3;2143:9;2134:7;2130:23;2126:33;2123:120;;;2162:79;;:::i;:::-;2123:120;2282:1;2307:53;2352:7;2343:6;2332:9;2328:22;2307:53;:::i;:::-;2297:63;;2253:117;2409:2;2435:50;2477:7;2468:6;2457:9;2453:22;2435:50;:::i;:::-;2425:60;;2380:115;2534:2;2560:50;2602:7;2593:6;2582:9;2578:22;2560:50;:::i;:::-;2550:60;;2505:115;2659:2;2685:50;2727:7;2718:6;2707:9;2703:22;2685:50;:::i;:::-;2675:60;;2630:115;2784:3;2811:50;2853:7;2844:6;2833:9;2829:22;2811:50;:::i;:::-;2801:60;;2755:116;2910:3;2937:50;2979:7;2970:6;2959:9;2955:22;2937:50;:::i;:::-;2927:60;;2881:116;1977:1027;;;;;;;;:::o;3010:169::-;3094:11;3128:6;3123:3;3116:19;3168:4;3163:3;3159:14;3144:29;;3010:169;;;;:::o;3185:224::-;3325:34;3321:1;3313:6;3309:14;3302:58;3394:7;3389:2;3381:6;3377:15;3370:32;3185:224;:::o;3415:366::-;3557:3;3578:67;3642:2;3637:3;3578:67;:::i;:::-;3571:74;;3654:93;3743:3;3654:93;:::i;:::-;3772:2;3767:3;3763:12;3756:19;;3415:366;;;:::o;3787:419::-;3953:4;3991:2;3980:9;3976:18;3968:26;;4040:9;4034:4;4030:20;4026:1;4015:9;4011:17;4004:47;4068:131;4194:4;4068:131;:::i;:::-;4060:139;;3787:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "241800",
								"executionCost": "24547",
								"totalCost": "266347"
							},
							"external": {
								"allowedTxTypes(address)": "2861",
								"setPermissions(address,bool,bool,bool,bool,bool)": "infinite"
							},
							"internal": {
								"approve(address,uint32)": "24376"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 70,
									"end": 1461,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 70,
									"end": 1461,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70,
									"end": 1461,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 437,
									"end": 491,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 437,
									"end": 491,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 437,
									"end": 491,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 437,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 437,
									"end": 491,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 437,
									"end": 491,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 491,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 437,
									"end": 491,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 437,
									"end": 491,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 437,
									"end": 491,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 437,
									"end": 491,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 473,
									"end": 483,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 462,
									"end": 470,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 462,
									"end": 470,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 462,
									"end": 483,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 462,
									"end": 483,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 462,
									"end": 483,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 462,
									"end": 483,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 462,
									"end": 483,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 462,
									"end": 483,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 462,
									"end": 483,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 462,
									"end": 483,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 462,
									"end": 483,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 462,
									"end": 483,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 462,
									"end": 483,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 462,
									"end": 483,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 462,
									"end": 483,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 462,
									"end": 483,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 462,
									"end": 483,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 462,
									"end": 483,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 462,
									"end": 483,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 462,
									"end": 483,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70,
									"end": 1461,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 1461,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 1461,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 1461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 1461,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 70,
									"end": 1461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 1461,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220044f2f51ceafa3c94e6d0db8be8bb09fc85fced0e232a41f3ad81f0d672ba71064736f6c63430008120033",
									".code": [
										{
											"begin": 70,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "E1751221"
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "F1416030"
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1461,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 499,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 499,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 499,
											"end": 624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 499,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 499,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 499,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 499,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 499,
											"end": 624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 499,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 499,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 632,
											"end": 1326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 632,
											"end": 1326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 499,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 560,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 591,
											"end": 616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 591,
											"end": 616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 591,
											"end": 616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 591,
											"end": 616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 591,
											"end": 616,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 591,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 591,
											"end": 616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 584,
											"end": 616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 499,
											"end": 624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 771,
											"end": 779,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 771,
											"end": 779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 771,
											"end": 779,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 771,
											"end": 779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 771,
											"end": 779,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 771,
											"end": 779,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 771,
											"end": 779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 771,
											"end": 779,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 771,
											"end": 779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 771,
											"end": 779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 757,
											"end": 779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 757,
											"end": 779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 757,
											"end": 767,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 757,
											"end": 779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 757,
											"end": 779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 757,
											"end": 779,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 749,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 749,
											"end": 821,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 749,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 749,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 749,
											"end": 821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 749,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 749,
											"end": 821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 749,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 749,
											"end": 821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 749,
											"end": 821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 749,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 749,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 749,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 749,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 749,
											"end": 821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 821,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 749,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 749,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 847,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 836,
											"end": 847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 836,
											"end": 839,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 836,
											"end": 847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 836,
											"end": 847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 836,
											"end": 847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 832,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 832,
											"end": 1319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 863,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 871,
											"end": 879,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 202,
											"end": 212,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 863,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 863,
											"end": 885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 863,
											"end": 885,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 863,
											"end": 885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 832,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 832,
											"end": 1319,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 832,
											"end": 1319,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 832,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 916,
											"end": 926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 952,
											"end": 965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 952,
											"end": 965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 952,
											"end": 957,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 952,
											"end": 965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 952,
											"end": 965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 952,
											"end": 965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 948,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 948,
											"end": 1018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 243,
											"end": 247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 991,
											"end": 994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1002,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 948,
											"end": 1018,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 948,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1048,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1036,
											"end": 1048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1048,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1032,
											"end": 1100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 277,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1074,
											"end": 1077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1100,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1032,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1118,
											"end": 1132,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1132,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1132,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1132,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1132,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1114,
											"end": 1186,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 313,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1158,
											"end": 1161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1170,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1186,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1114,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1216,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1204,
											"end": 1216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1208,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1216,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1200,
											"end": 1271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 350,
											"end": 354,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1242,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1200,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1293,
											"end": 1301,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1285,
											"end": 1307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1285,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 901,
											"end": 1319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 832,
											"end": 1319,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 832,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 1326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1334,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1435,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1269,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1176,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1262,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1245,
											"end": 1250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1263,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1269,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1390,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1275,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1377,
											"end": 1382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1360,
											"end": 1383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1614,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1396,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1527,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1602,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1538,
											"end": 1607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1607,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1538,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1614,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1614,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1620,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1703,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1832,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1801,
											"end": 1806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1786,
											"end": 1807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1807,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1786,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1808,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1766,
											"end": 1826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1824,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1826,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1766,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1971,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1838,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1935,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 1965,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1935,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1971,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 3004,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1977,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2158,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2134,
											"end": 2141,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2159,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2243,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2123,
											"end": 2243,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2162,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2162,
											"end": 2241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2241,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2162,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2243,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2123,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2352,
											"end": 2359,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2307,
											"end": 2360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2360,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2307,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2360,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2253,
											"end": 2370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2411,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2477,
											"end": 2484,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2474,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2466,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2435,
											"end": 2485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2485,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2435,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2485,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2536,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2602,
											"end": 2609,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2582,
											"end": 2591,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2560,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2610,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2560,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2610,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2659,
											"end": 2661,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2685,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2716,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2685,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2685,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2685,
											"end": 2735,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2685,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2735,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2630,
											"end": 2745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2787,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2811,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2853,
											"end": 2860,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2842,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2811,
											"end": 2861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2861,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2811,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 2913,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 2937,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2979,
											"end": 2986,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 2976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2968,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 2977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2937,
											"end": 2987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2987,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2937,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2987,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2881,
											"end": 2997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 3004,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 3004,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 3004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 3004,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 3004,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 3004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 3004,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 3004,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 3004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3179,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3010,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3163,
											"end": 3166,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3159,
											"end": 3173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3179,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3185,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3359,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79207468652061646D696E2063616E2063616C6C20746869732066756E"
										},
										{
											"begin": 3321,
											"end": 3322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3360,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3401,
											"name": "PUSH",
											"source": 1,
											"value": "6374696F6E000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3389,
											"end": 3391,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3781,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3415,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3642,
											"end": 3644,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3637,
											"end": 3640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3578,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3645,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3578,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3743,
											"end": 3746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3654,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3747,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3654,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3767,
											"end": 3770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 4206,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3787,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 3993,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 3989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3968,
											"end": 3994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3968,
											"end": 3994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4050,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4051,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4194,
											"end": 4198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4068,
											"end": 4199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4199,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4068,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 4206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 4206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 4206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 4206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"TxPermissions.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowedTxTypes(address)": "e1751221",
							"setPermissions(address,bool,bool,bool,bool,bool)": "f1416030"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"allowedTxTypes\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"all\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"basic\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"call\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"create\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"priv\",\"type\":\"bool\"}],\"name\":\"setPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TxPermissions.sol\":\"TransactionPermissions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TxPermissions.sol\":{\"keccak256\":\"0xa517311ca1d022385d6792a36a80134e8eb06f546cb5cbac746f79e562b1da74\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://681e909475d7368f0d033f6b4378855af6fa1ada019fdf763ea88cbed5594b87\",\"dweb:/ipfs/QmSt2JS1MQFrKKrs7XjDhpQxQPP7C3YZHM9H3tFehVRF69\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "TxPermissions.sol:TransactionPermissions",
								"label": "approvedAddresses",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 26,
								"contract": "TxPermissions.sol:TransactionPermissions",
								"label": "deployer",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"TxPermissions.sol": {
				"ast": {
					"absolutePath": "TxPermissions.sol",
					"exportedSymbols": {
						"TransactionPermissions": [
							150
						]
					},
					"id": 151,
					"license": "Unlicensed",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransactionPermissions",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 150,
							"linearizedBaseContracts": [
								150
							],
							"name": "TransactionPermissions",
							"nameLocation": "79:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "109:34:0",
										"text": "Allowed transaction types mask"
									},
									"id": 5,
									"mutability": "constant",
									"name": "None",
									"nameLocation": "165:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "149:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 3,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "149:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "172:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "All",
									"nameLocation": "196:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "180:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 6,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "180:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "30786666666666666666",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "202:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4294967295_by_1",
											"typeString": "int_const 4294967295"
										},
										"value": "0xffffffff"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 11,
									"mutability": "constant",
									"name": "Basic",
									"nameLocation": "235:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "219:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 9,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "219:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "243:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 14,
									"mutability": "constant",
									"name": "Call",
									"nameLocation": "270:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "254:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 12,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "254:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "30783032",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "277:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "0x02"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "Create",
									"nameLocation": "304:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "288:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 15,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "288:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "30783034",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "313:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "0x04"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 20,
									"mutability": "constant",
									"name": "Private",
									"nameLocation": "340:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "324:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 18,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "324:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "30783038",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "350:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8_by_1",
											"typeString": "int_const 8"
										},
										"value": "0x08"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "approvedAddresses",
									"nameLocation": "388:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "361:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 23,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 21,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "369:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "361:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "380:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "deployer",
									"nameLocation": "420:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "412:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 25,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "412:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "451:40:0",
										"statements": [
											{
												"expression": {
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 29,
														"name": "deployer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "462:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 30,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "473:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "477:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "462:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "462:21:0"
											}
										]
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "448:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:0:0"
									},
									"scope": 150,
									"src": "437:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "573:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 42,
														"name": "approvedAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "591:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 44,
													"indexExpression": {
														"id": 43,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "609:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "591:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 41,
												"id": 45,
												"nodeType": "Return",
												"src": "584:32:0"
											}
										]
									},
									"functionSelector": "e1751221",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowedTxTypes",
									"nameLocation": "508:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "531:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "523:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:16:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "560:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 39,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "560:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:8:0"
									},
									"scope": 150,
									"src": "499:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "738:588:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 63,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "757:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "761:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "757:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 65,
																"name": "deployer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "771:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "757:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207468652061646d696e2063616e2063616c6c20746869732066756e6374696f6e",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "781:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_342ed9a807fdc65558f2dc6b58f404db0a504f1c21a28c173767c765282f3da1",
																"typeString": "literal_string \"Only the admin can call this function\""
															},
															"value": "Only the admin can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_342ed9a807fdc65558f2dc6b58f404db0a504f1c21a28c173767c765282f3da1",
																"typeString": "literal_string \"Only the admin can call this function\""
															}
														],
														"id": 62,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "749:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "749:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "749:72:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 70,
														"name": "all",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "836:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "843:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "836:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 132,
													"nodeType": "Block",
													"src": "901:418:0",
													"statements": [
														{
															"assignments": [
																80
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 80,
																	"mutability": "mutable",
																	"name": "ret",
																	"nameLocation": "923:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 132,
																	"src": "916:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 79,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "916:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 82,
															"initialValue": {
																"id": 81,
																"name": "None",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "929:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "916:17:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 83,
																	"name": "basic",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "952:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "961:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "952:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 93,
															"nodeType": "IfStatement",
															"src": "948:70:0",
															"trueBody": {
																"id": 92,
																"nodeType": "Block",
																"src": "966:52:0",
																"statements": [
																	{
																		"expression": {
																			"id": 90,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 86,
																				"name": "ret",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 80,
																				"src": "985:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 89,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 87,
																					"name": "ret",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 80,
																					"src": "991:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "|",
																				"rightExpression": {
																					"id": 88,
																					"name": "Basic",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 11,
																					"src": "997:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "991:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"src": "985:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"id": 91,
																		"nodeType": "ExpressionStatement",
																		"src": "985:17:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 94,
																	"name": "call",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "1036:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 95,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1044:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1036:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 104,
															"nodeType": "IfStatement",
															"src": "1032:68:0",
															"trueBody": {
																"id": 103,
																"nodeType": "Block",
																"src": "1049:51:0",
																"statements": [
																	{
																		"expression": {
																			"id": 101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 97,
																				"name": "ret",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 80,
																				"src": "1068:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 98,
																					"name": "ret",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 80,
																					"src": "1074:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "|",
																				"rightExpression": {
																					"id": 99,
																					"name": "Call",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 14,
																					"src": "1080:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "1074:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"src": "1068:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"id": 102,
																		"nodeType": "ExpressionStatement",
																		"src": "1068:16:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 105,
																	"name": "create",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "1118:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1118:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 115,
															"nodeType": "IfStatement",
															"src": "1114:72:0",
															"trueBody": {
																"id": 114,
																"nodeType": "Block",
																"src": "1133:53:0",
																"statements": [
																	{
																		"expression": {
																			"id": 112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 108,
																				"name": "ret",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 80,
																				"src": "1152:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 109,
																					"name": "ret",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 80,
																					"src": "1158:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "|",
																				"rightExpression": {
																					"id": 110,
																					"name": "Create",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 17,
																					"src": "1164:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "1158:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"src": "1152:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"id": 113,
																		"nodeType": "ExpressionStatement",
																		"src": "1152:18:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 116,
																	"name": "priv",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1204:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1212:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1204:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 126,
															"nodeType": "IfStatement",
															"src": "1200:71:0",
															"trueBody": {
																"id": 125,
																"nodeType": "Block",
																"src": "1217:54:0",
																"statements": [
																	{
																		"expression": {
																			"id": 123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 119,
																				"name": "ret",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 80,
																				"src": "1236:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 120,
																					"name": "ret",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 80,
																					"src": "1242:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "|",
																				"rightExpression": {
																					"id": 121,
																					"name": "Private",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 20,
																					"src": "1248:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "1242:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"src": "1236:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"id": 124,
																		"nodeType": "ExpressionStatement",
																		"src": "1236:19:0"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 128,
																		"name": "approved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 49,
																		"src": "1293:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 129,
																		"name": "ret",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 80,
																		"src": "1303:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"id": 127,
																	"name": "approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "1285:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$returns$__$",
																		"typeString": "function (address,uint32)"
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1285:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 131,
															"nodeType": "ExpressionStatement",
															"src": "1285:22:0"
														}
													]
												},
												"id": 133,
												"nodeType": "IfStatement",
												"src": "832:487:0",
												"trueBody": {
													"id": 78,
													"nodeType": "Block",
													"src": "848:49:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 74,
																		"name": "approved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 49,
																		"src": "871:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 75,
																		"name": "All",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 8,
																		"src": "881:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"id": 73,
																	"name": "approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "863:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$returns$__$",
																		"typeString": "function (address,uint32)"
																	}
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "863:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 77,
															"nodeType": "ExpressionStatement",
															"src": "863:22:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "f1416030",
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPermissions",
									"nameLocation": "641:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "664:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "656:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "all",
												"nameLocation": "679:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "674:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 50,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "674:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "basic",
												"nameLocation": "689:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "684:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "684:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "call",
												"nameLocation": "701:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 54,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "696:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "create",
												"nameLocation": "712:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "707:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 56,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "707:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "priv",
												"nameLocation": "725:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "720:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 58,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:75:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "738:0:0"
									},
									"scope": 150,
									"src": "632:694:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1398:60:0",
										"statements": [
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 142,
															"name": "approvedAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "1409:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																"typeString": "mapping(address => uint32)"
															}
														},
														"id": 144,
														"indexExpression": {
															"id": 143,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1427:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1409:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 145,
														"name": "permissions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "1439:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1409:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "1409:41:0"
											}
										]
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1343:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1359:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1351:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "permissions",
												"nameLocation": "1376:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1369:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 138,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1369:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1350:38:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1398:0:0"
									},
									"scope": 150,
									"src": "1334:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 151,
							"src": "70:1391:0",
							"usedErrors": []
						}
					],
					"src": "42:1419:0"
				},
				"id": 0
			}
		}
	}
}